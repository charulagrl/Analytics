/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AutomaticTestCaseGenerator.java
 *
 * Created on Dec 25, 2011, 11:17:57 PM
 */
package collection;
import java.util.ArrayList;
import java.util.Random;
import java.io.*;
import javax.swing.JOptionPane;
/**
 *
 * @author durga
 */
public class AutomaticTestCaseGenerator extends javax.swing.JFrame {

    /** Creates new form AutomaticTestCaseGenerator */
    public AutomaticTestCaseGenerator() {
        initComponents();
        this.setTitle("TEST CASE GENERATOR");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nusers = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        rinter = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        gap = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        minfreq = new javax.swing.JTextField();
        maxfreq = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 255)));
        jPanel1.setToolTipText("hi");

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 14));
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Test Case Generator");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addContainerGap(430, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel2.setForeground(new java.awt.Color(51, 204, 0));
        jLabel2.setText("No.Of Users");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel3.setForeground(new java.awt.Color(51, 204, 0));
        jLabel3.setText("Recent Interaction");

        jButton1.setText("Fix Current Time Stamp");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel4.setForeground(new java.awt.Color(51, 204, 0));
        jLabel4.setText("Specify maximum interaction gap(in days)");

        jButton2.setText("GENERATE DATASETS");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel5.setForeground(new java.awt.Color(51, 204, 0));
        jLabel5.setText("Specify frequency range of interactions between connected users");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel6.setForeground(new java.awt.Color(51, 204, 0));
        jLabel6.setText("min");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel7.setForeground(new java.awt.Color(51, 204, 0));
        jLabel7.setText("max");

        minfreq.setText("0");

        jButton3.setText("EXIT");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(142, 142, 142)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(gap)
                                            .addComponent(nusers)
                                            .addComponent(rinter, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(minfreq, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maxfreq, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                        .addGap(287, 287, 287))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nusers, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rinter, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(26, 26, 26)
                .addComponent(jLabel4)
                .addGap(12, 12, 12)
                .addComponent(gap, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minfreq, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxfreq, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    unixTime = System.currentTimeMillis() / 1000L;
    rinter.setText(unixTime+"");
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    try
    {
        
    Writer output1 = null,output2=null;
    File file1 = new File("C:\\Users\\Rahul\\Desktop\\MY THESIS\\MY THESIS\\COLLECTION\\src\\collection\\one.txt");
    File file2 = new File("C:\\Users\\Rahul\\Desktop\\MY THESIS\\MY THESIS\\COLLECTION\\src\\collection\\two.txt");
    output1 = new BufferedWriter(new FileWriter(file1));
    output2 = new BufferedWriter(new FileWriter(file2));
        
    gap_value=Integer.parseInt(gap.getText());
    minTime=unixTime-(gap_value*86400);
    nuser=Integer.parseInt(nusers.getText());
    
    int interactions_freq[][]=new int[nuser+1][nuser+1];
    ArrayList[] al=new ArrayList[nuser+1];
    for(int i=1;i<=nuser;i++)
        al[i]=new ArrayList();
    int Min=0,Max,neighbour_index,status=0;
    int friends[][]=new int[nuser+1][2];
    Random randomGenerator = new Random();
    for(int i=1;i<=nuser;i++)
    {
        for(int j=1;j<=nuser;j++)
        {
            interactions_freq[i][j]=0;
        }
    }
    for(int i=1;i<=nuser;i++)
    {
        if(i!=nuser)
            friends[i][1]=randomGenerator.nextInt(nuser-i);
        else friends[i][1]=0;
        //System.out.println("no.of friends assigned to ID:"+i+" are "+friends[i][1]);
        for(int j=1;j<=nuser;j++)
        {
            if(i!=j)
                al[i].add(j);
        }
    }
    for(int i=1;i<=nuser;i++)
    {
        if((i==nuser)&&(friends[i][1]==0))
        {
            int before=1+(int)(Math.random() * ((10 - 1) + 1));
            long timeStamp=minTime-(86400*before);
            output1.write(i+"\t"+i+"\t"+timeStamp+"\n");
        }
        for(int j=0;j<friends[i][1];j++)
        {
            Max=al[i].size()-1;
            neighbour_index=Min + (int)(Math.random() * ((Max - Min) + 1));
            int before=1+(int)(Math.random() * ((10 - 1) + 1));
            long timeStamp=minTime-(86400*before);
            //System.out.println(i+" is connected with "+al[i].get(neighbour_index)+" at"+timeStamp);
            int item=Integer.parseInt(al[i].get(neighbour_index).toString());
            output1.write(i+"\t"+item+"\t"+timeStamp+"\n");
            
            
            /* FINDING FREQUENCY OF INTERACTIONS BETWEEN USERS*/
            int mini=Integer.parseInt(minfreq.getText());
            int maxi=Integer.parseInt(maxfreq.getText());
            int freq=mini + (int)(Math.random() * ((maxi - mini) + 1));
            interactions_freq[i][item]=freq;
            //interactions_freq[item][i]=freq;
            
            /*TO REMOVE REDUNDANT RELATIONSHIPS*/
            Object o=i;
            al[i].remove(neighbour_index);
            al[item].remove(o);
   
        }
        al[i].clear();
    }
    output1.close();
    int diff=Integer.parseInt(gap.getText());
    for(int i=1;i<=nuser;i++)
    {  
        for(int j=1;j<=nuser;j++)
        {
            if(interactions_freq[i][j]!=0)
            {
                int f=interactions_freq[i][j];
                for(int k=0;k<f;k++)
                {
                    int value=0 + (int)(Math.random() * ((diff - 0) + 1));
                    long dayTimeStampValue=80000 + (long)(Math.random() * ((86400 - 80000) + 1));
                    long timeStamp=unixTime-(value*dayTimeStampValue);
                    output2.write(i+"\t"+j+"\t"+timeStamp+"\n");
                }
            }
        }
    }
    output2.close();
    JOptionPane.showMessageDialog(rootPane, "DATASETS BUILDING FINISHED");
 
    }
    catch(Exception e)
    {
        System.out.println(e);
    }
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
}//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AutomaticTestCaseGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AutomaticTestCaseGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AutomaticTestCaseGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AutomaticTestCaseGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new AutomaticTestCaseGenerator().setVisible(true);
            }
        });
       
    }
    long unixTime;
    int gap_value;
    long minTime;
    int nuser;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField gap;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField maxfreq;
    private javax.swing.JTextField minfreq;
    private javax.swing.JTextField nusers;
    private javax.swing.JTextField rinter;
    // End of variables declaration//GEN-END:variables

   
}
